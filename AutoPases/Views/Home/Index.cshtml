@using AutoPases.Models
@model List<ModProyectosActivos>

@{
    ViewBag.Title = "Monibyte Deployment";
    var entitys = Model.GroupBy(x => x.Entidad);
}
<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js"></script>
<style>
    .navbar-inverse {
        background-color: #222222;
        border-color: #080808;
        width: 100%;
        width: 100%;
        left: 0;
        top: 0px;
        position: absolute;
    }
</style>

<script>
    _objectTemp = {};
    $(document).ready(function () {
        kendoConsole.log("Starting ...");
        $("a.activeSwitch").on("click", function () {
            var projectName = $(this).attr("value");
            $monibyte.executeAjax({
                actionUrl: "@Url.Action("GetMobileSwitch")",
                jsonData: { projectName: projectName },
                targetId: "switchSection",
                error: function pruebaError() {
                    kendoConsole.error("GetMobileSwitch Error");
                }
            });
        });
    });

    function GCloudDownload(object, index) {
        $monibyte.executeAjax({
            actionUrl: "@Url.Action("GCloudDownloadAsync")",
            jsonData: { command: "ping 10.80.1.46" }, //{ command: "gsutil cp gs://Travis_CI/CoreCR Desktop"},
            callback: function (data) {
                if (data.result) {
                    kendoConsole.specialEvent("*** GCloud Download Successful ***");
                    kendoConsole.log(data.response);
                    checkManager("GCloudDownload", true)
                    window[treeViewData.treeView[object, index + 1]](object, index + 1);
                }
            },
            error: function pruebaError() {
                kendoConsole.error("GCloud Download Error");
            }
        });
    }

    function StopSite(object, index) {
        var treeViewData = JSON.parse(object.TreeView);
        $monibyte.executeAjax({
            actionUrl: "@Url.Action("StopSiteAsync")",
            jsonData: { pageSite: object.SiteName },
            callback: function (data) {
                if (data) {
                    kendoConsole.specialEvent("*** Stop Site Successful ***");
                } else {
                    kendoConsole.specialEvent("***Site Stoped Or Not Exist ***");
                }
                checkManager("StopSite", true)
                window[treeViewData.treeView[object, index + 1]](object, index + 1);
            },
            error: function pruebaError() {
                kendoConsole.error("Stop Site Error");
            }
        });
    }
    function CreateBackUp(object, index) {
        var treeViewData = JSON.parse(object.TreeView);
        $monibyte.executeAjax({
            actionUrl: "@Url.Action("CreateBackUpAsync")",
            jsonData: {
                sourcePath: object.TargetPath,
                targetPath: object.BackUpPath,
                projectName: object.SiteName
            },
            callback: function (data) {
                if (data) {
                    kendoConsole.specialEvent("*** Create BackUp Successful ***");
                    checkManager("CreateBackUp", true)
                    window[treeViewData.treeView[object, index + 1]](object, index + 1);
                }
            },
            error: function pruebaError(error) {
                kendoConsole.error(error.response);
                kendoConsole.error("Create BackUp Error");
            }
        });
    }
    function PublishSite(object, index) {
        _objectTemp = object;
        var treeViewData = JSON.parse(object.TreeView);
        var jsonData = {};
        if (object.PublishFile != null) {
            jsonData.publishFiles = object.PublishFile;
            jsonData.sourcePath = object.DownloadPath;
            jsonData.backUp = object.BackUpPath;
            jsonData.targetPath = object.TargetPath;
            jsonData.solution = treeViewData.ProjectName
            jsonData.siteName = object.SiteName;
        } else {
            jsonData.targetPath = object.TargetPath;
            jsonData.sourcePath = object.DownloadPath;
        }
        $monibyte.executeAjax({
            actionUrl: "@Url.Action("PublishSiteAsync")",
            jsonData: jsonData,
            callback: function (data) {
                if (data.result) {
                    kendoConsole.specialEvent("*** Publish Site Successful ***");
                    kendoConsole.log(data.response);
                    checkManager("PublishSite", true)
                    window[treeViewData.treeView[object, index + 1]](object, index + 1);
                } else {
                    kendoConsole.error(data.response);
                    kendoConsole.error("Publish Site Error");
                    $("#rollback").toggle();
                }
            },
            error: function pruebaError(error) {
                kendoConsole.error(error.response);
                kendoConsole.error("Publish Site Error");
                $("#rollback").toggle();
            }
        });
    }
    function RollBack() {
        var jsonData = {};        
        jsonData.targetPath = _objectTemp.TargetPath;
        jsonData.sourcePath = _objectTemp.BackUpPath;
        jsonData.siteName = _objectTemp.SiteName;
        
        $monibyte.executeAjax({
            actionUrl: "@Url.Action("RollBackAsync")",
            jsonData: jsonData,
            callback: function (data) {
                if (data.result) {
                    kendoConsole.specialEvent("*** RollBack Site Successful ***");
                } else {
                    kendoConsole.error(data.response);
                    kendoConsole.error("RollBack Error");
                }
            },
            error: function pruebaError(error) {
                kendoConsole.error(error.response);
                kendoConsole.error("RollBack Error");
            }
        });
    }

    function StartSite(object, index) {
        $monibyte.executeAjax({
            actionUrl: "@Url.Action("StartSiteAsync")",
            callback: function (data) {
                if (data.result) {
                    kendoConsole.specialEvent("*** Start Site Successful ***");
                    checkManager("StartSite", true)
                    kendoConsole.log(data.response);
                } else{
                    kendoConsole.error("Start Site Error");
                    kendoConsole.error(data.response);
                }
            },
            error: function pruebaError(e) {          
                kendoConsole.error("Start Site Error");
            }
        });
        $("#rollback").toggle();
    }
</script>

<input type="hidden" value="" id="siteName" name="siteName" />
<nav class="navbar navbar-inverse">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-9">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-9">
            <ul class="nav navbar-nav">
                @foreach (var item in entitys)
                {
                    <li class="active">
                        @Html.ActionLink(item.First().Entidad,
                                  "Index", "Home", new
                                  {
                                      @value = item.First().Entidad,
                                      @href = "#",
                                      @class = "activeSwitch"
                                  })
                    </li>
                }
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>

<div class="col-lg-5 col-xs-12" id="switchSection"></div>
<div id="treeviewContent" class="col-lg-7 col-xs-12" style="margin-top: 50px;"></div>
<div class="clearfix"></div>
<div class="box col-xs-12">
    <div class="console">
    </div>
</div>

